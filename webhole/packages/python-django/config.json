{
    "package-name": "python-django",
    "command-0": "print('webhole-python-flask-by-yasserbdj96-:)')",
    "command-0-output": "webhole-python-flask-by-yasserbdj96-:)",
    "auto-call":{
        "DIRECTORY_SEPARATOR": "import os;print(os.sep)",
        "SCRIPT_FILENAME":"import os;print(os.path.dirname(os.path.abspath(__file__)))",
        "file_content":"",
        "error_emoji":"❌",
        "success_emoji":"✅",
        "warning_emoji":"⚠️"
    },
    "start": "",
    "end": "",
    "commands": {
        "ls": {
            "command-file": "ls.py",
            "command-arguments": {"path":"__path__"},
            "command-function": {"function":"fn_listsort","path":"{self.packages}.__functions__.fn_listsort"},
            "command-description": "List files in a directory",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='ls', path=pwd, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "tree": {
            "command-file": "tree.py",
            "command-arguments": {"path":"__path__"},
            "command-description": "Display directory structure in a tree format",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='tree', path=pwd, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "tree -f": {
            "command-file": "tree_f.py",
            "command-arguments": {"path":"__path__"},
            "command-function": {"function":"fn_listsort","path":"{self.packages}.__functions__.fn_listsort"},
            "command-description": "Display directory structure in a tree format with full paths",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='tree -f', path=pwd, cf=False, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": true,
            "with_function": false
        },
        "cd": {
            "command-file": "cd.py",
            "command-arguments": {"path":"__path__"},
            "command-return":"SCRIPT_FILENAME",
            "command-default": {"old_path":"{self.SCRIPT_FILENAME}"},
            "command-description": "Change directory",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='cd', path=cmd_parts, **c_params)"
            },
            "parameters": {},
            "output": false,
            "post_execute": "pwd",
            "return_list": false,
            "with_function": false
        },
        "cat":{
            "command-file": "cat.py",
            "command-arguments": {"path":"__path__"},
            "command-return":"{self.file_content}",
            "command-default": {"old_path":"{self.SCRIPT_FILENAME}"},
            "command-description": "Display file content",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='cat', path=cmd_parts, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "-v": {
            "action": {
                "type": "function",
                "handler": "con.info('__version__','__source__','__package_version__','__package_source__','__author__')"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "-h": {
            "action": {
                "type": "function",
                "handler": "con.help('pkg')"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "hole": {
            "action": {
                "type": "function",
                "handler": "con.hole(pkg=cmd_parts,nkey=NKEY)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "pkgs": {
            "action": {
                "type": "function",
                "handler": "con.pkgs()"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "exit": {
            "action": {
                "type": "function",
                "handler": "exit()"
            },
            "parameters": {},
            "output": false,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        }
    },
    "values": {
        "pwd": {
            "value-get":"{self.SCRIPT_FILENAME}"
        },
        "package_name": {
            "value-get":"{self.package_name}"
        },
        "package_version": "0.0.0-beta",
        "author":"Author : YasserBdj96\nEmail  : yasserbdj96@gmail.com",
        "package_source":"https://github.com/yasserbdj96/WebHole/tree/main/webhole/packages/python-django"
    },
    "hole-code":"hole.py",
        "logo": [
            "",
            "    ██╗    ██╗███████╗██████╗ ██╗  ██╗ ██████╗ ██╗     ███████╗",
            "    ██║    ██║██╔════╝██╔══██╗██║  ██║██╔═══██╗██║     ██╔════╝",
            "    ██║ █╗ ██║█████╗  ██████╔╝███████║██║   ██║██║     █████╗  ",
            "    ██║███╗██║██╔══╝  ██╔══██╗██╔══██║██║   ██║██║     ██╔══╝  ",
            "    ╚███╔███╔╝███████╗██████╔╝██║  ██║╚██████╔╝███████╗███████╗",
            "     ╚══╝╚══╝ ╚══════╝╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝",
            "",
            "    ⚡ WebHole -  P Y T H O N   •  D J A N G O  (v__package_version__) ⚡",
            "",
            "   +────────────────────────────────────────────────────────────+",
            "      🛠️ Coded by: __author__ ",
            "      🌐 Website : https://yasserbdj96.github.io/ ",
            "      💾 Source  : __source__ ",
            "      📦 Build   : __version__ ",
            "   +────────────────────────────────────────────────────────────+",
            ""
        ],
    "logo_color": {
        "█": "c_green",
        "═": "c_yellow",
        "╚": "c_yellow",
        "╝": "c_yellow",
        "╗": "c_yellow",
        "╔": "c_yellow",
        "║": "c_yellow",
        "─": "c_yellow",
        "+": "c_yellow"

    }
}
